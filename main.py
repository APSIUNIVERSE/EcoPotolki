import logging
import sys
from aiogram import Bot, Dispatcher, types, F
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import Message, FSInputFile
from aiogram.utils.keyboard import InlineKeyboardBuilder
import pyperclip
from aiogram.utils.markdown import hlink
import sqlite_db
import asyncio
import aioschedule


botkart = FSInputFile("–±–æ—Ç.png")
TOKEN = "6923533328:AAGzGN8a9SidZO5f0RsOZleEzyzTtS5H2iY"
dp = Dispatcher()
promo = "MSKPOTOLKI"
bot = Bot(token=TOKEN, parse_mode='HTML')
ID = -1002090528693
TEXT = "–ü—Ä–∏–≤–µ—Ç! –î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å –Ω–∞–º–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –Ω–∞—à–∏–º –±–æ—Ç–æ–º"

builder = InlineKeyboardBuilder()
builder.row(types.InlineKeyboardButton(text="–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å", callback_data="copy"))

bot_kb = InlineKeyboardBuilder()
bot_kb.row(types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏", url="https://t.me/ecoceilings_bot"))


menu = InlineKeyboardBuilder()
menu.row(types.InlineKeyboardButton(text="–ê–∫—Ü–∏–∏", callback_data="stocks"))
menu.row(types.InlineKeyboardButton(text="–û –Ω–∞—Å", callback_data="about"))
menu.row(types.InlineKeyboardButton(text="–≠—Ç–∞–ø—ã", callback_data="steps"))
menu.row(types.InlineKeyboardButton(text="–û—Ç–∑—ã–≤—ã", callback_data="reviews"))
menu.row(types.InlineKeyboardButton(text="–ù–∞—à —Å–∞–π—Ç", url="https://www.ecopotolki-mos.ru/"))


back_button = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")

stocks_menu = InlineKeyboardBuilder()
stocks_menu.row(types.InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ", url="https://www.ecopotolki-mos.ru/"))
stocks_menu.row(back_button)


about_menu = InlineKeyboardBuilder()
about_menu.row(types.InlineKeyboardButton(text="–ü–æ—á–µ–º—É –º—ã?", url="https://www.ecopotolki-mos.ru/#about"))
about_menu.row(back_button)


back_keyboard = InlineKeyboardBuilder()
back_keyboard.add(back_button)


@dp.message(CommandStart())
async def command_start_handler(message: Message):
    if await sqlite_db.sql_read(message.from_user.id):
        await message.answer(text="–û —á–µ–º –µ—â–µ –í—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å?\n–ù–∞–º –µ—â–µ –µ—Å—Ç—å —á–µ–º –í–∞—Å —É–¥–∏–≤–∏—Ç—å :)",
                             reply_markup=menu.as_markup())
    else:
        await sqlite_db.sql_add_command(message.from_user.id)
        photo_file = FSInputFile("start.png")
        await message.answer_photo(photo=photo_file,
                                   caption=f"<b>–í—Ä–µ–º—è —Å–∫–∏–¥–æ–∫</b>üéâüéâ\n–¢–∞–∫ –∫–∞–∫ –í—ã —è–≤–ª—è–µ—Ç–µ—Å—å –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –º—ã –¥–∞—Ä–∏–º –í–∞–º —Å–∫–∏–¥–∫—É –Ω–∞ –∑–∞–∫–∞–∑!",
                                   parse_mode='HTML', reply_markup=builder.as_markup())
        await message.answer(text="–û —á–µ–º –µ—â–µ –í—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å?\n–ù–∞–º –µ—â–µ –µ—Å—Ç—å —á–µ–º –í–∞—Å —É–¥–∏–≤–∏—Ç—å :)",
                             reply_markup=menu.as_markup())


@dp.callback_query(F.data == "copy")
async def menu_command(callback: types.CallbackQuery):
    await callback.message.delete()
    await callback.message.answer(text="–í–∞—à –ø—Ä–æ–º–æ–∫–æ–¥: MSKPOTOLKI\n–ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ!")
    await callback.answer(text="")


@dp.callback_query(F.data == "stocks")
async def stocks_command(callback: types.CallbackQuery):
    await callback.answer(text="")
    # await callback.message.answer(text="<b>–°–∫–∏–¥–∫–∞ 20%</b>üéâüéâ\n- –ü—Ä–∏ –∑–∞–∫–∞–∑–µ –ø–æ—Ç–æ–ª–∫–æ–≤ –Ω–∞ –≤—Å—é –∫–≤–∞—Ä—Ç–∏—Ä—É –∏–ª–∏ –¥–æ–º!"
    #                                    "\n- –ü—Ä–∏ –∑–∞–∫–∞–∑–µ –Ω–∞—à–µ–≥–æ –æ—Å–≤–µ—â–µ–Ω–∏—è! (–ª—é—Å—Ç—Ä—ã, —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–∏, —Ç—Ä–µ–∫–∏ –∏ –æ—Å—Ç–∞–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ)"
    #                                    "\n<b>–ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ</b>\nüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëá", reply_markup=stocks_menu.as_markup())
    await callback.message.answer_photo(botkart, caption="<b>–°–∫–∏–¥–∫–∞ 20%</b>üéâüéâ\n- –ü—Ä–∏ –∑–∞–∫–∞–∑–µ –ø–æ—Ç–æ–ª–∫–æ–≤ –Ω–∞ –≤—Å—é –∫–≤–∞—Ä—Ç–∏—Ä—É –∏–ª–∏ –¥–æ–º!"
                                       "\n- –ü—Ä–∏ –∑–∞–∫–∞–∑–µ –Ω–∞—à–µ–≥–æ –æ—Å–≤–µ—â–µ–Ω–∏—è! (–ª—é—Å—Ç—Ä—ã, —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–∏, —Ç—Ä–µ–∫–∏ –∏ –æ—Å—Ç–∞–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ)"
                                       "\n<b>–ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ</b>\nüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëá", parse_mode='HTML', reply_markup=stocks_menu.as_markup())


@dp.callback_query(F.data == "about")
async def about_command(callback: types.CallbackQuery):
    await callback.answer(text="")
    await callback.message.answer(text="–ó–∞–¥—É–º—ã–≤–∞–ª–∏—Å—å –æ –Ω–∞—Ç—è–∂–Ω—ã—Ö –ø–æ—Ç–æ–ª–∫–∞—Ö, –Ω–æ —Å–æ–º–Ω–µ–≤–∞–π—Ç–µ—Å—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ? –ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ!\n\n"
                                       "–ë–æ–ª–µ–µ —á–µ–º 10 –ª–µ—Ç –º—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –Ω–∞—Ç—è–∂–Ω—ã—Ö –ø–æ—Ç–æ–ª–∫–æ–≤ –≤ –ú–æ—Å–∫–≤–µ –∏ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏. –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞–±–æ—Ç—ã "
                                       "–ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –Ω–∞—Ç—è–∂–Ω—ã—Ö –ø–æ—Ç–æ–ª–∫–æ–≤ –∫–∞–∫ –≤ –∂–∏–ª—ã—Ö –ø–æ–º–µ—â–µ–Ω–∏—è—Ö, —Ç–∞–∫ –∏ –¥–ª—è —Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤, –≤—Ä–æ–¥–µ —Å—Ç—É–¥–∏–π –∏ –æ—Ñ–∏—Å–æ–≤.\n\n"
                                       "–ú—ã —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞–µ–º —Å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º–∏ –∑–∞–∫–∞–∑—á–∏–∫–∞–º–∏ –∏ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏, –ø—Ä–µ–¥–ª–∞–≥–∞—è —Ç–µ—Å–Ω–æ–µ –ø–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ –Ω–∞ –≤—Å–µ–≤–æ–∑–º–æ–∂–Ω—ã—Ö —Å—Ç–∞–¥–∏—è—Ö –ø—Ä–æ–µ–∫—Ç–∞ - –æ—Ç "
                                       "–æ–±–≥–æ–≤–∞—Ä–∏–≤–∞–Ω–∏—è –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –¥–æ –≤—ã–µ–∑–¥–∞ –Ω–∞ –æ–±—ä–µ–∫—Ç –¥–ª—è –∑–∞–º–µ—Ä–æ–≤, —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω–µ –∏ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç.\n\n"
                                       "–í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º, –ø—Ä–æ—à–ª–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ –†–æ—Å—Å–∏–π—Å–∫–æ–π —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–º –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º –≤ –ø–æ–¥—Ö–æ–¥–µ –∏ "
                                       "—Å—É—Ä–æ–≤–æ–µ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –≤—Å–µ–≤–æ–∑–º–æ–∂–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –¥–æ–≥–æ–≤–æ—Ä–∞, –≤ —Ç–æ–º —á–∏—Å–ª–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–±–æ—Ç, —Å—Ä–æ–∫–∏ –∏ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞.",
                                  reply_markup=about_menu.as_markup())


@dp.callback_query(F.data == "steps")
async def steps_command(callback: types.CallbackQuery):
    await callback.answer(text="", parse_mode='HTML')
    await callback.message.answer(text="<b>–ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—Ç—è–∂–Ω—ã—Ö –ø–æ—Ç–æ–ª–∫–æ–≤?</b>\n\n"
                                       "–ù–∞—à –∑–∞–º–µ—Ä—â–∏–∫ –ø—Ä–∏–µ–∑–∂–∞–µ—Ç –Ω–∞ –æ–±—ä–µ–∫—Ç –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –æ—Ü–µ–Ω–∫–∏ –≤–µ–ª–∏—á–∏–Ω –∑–¥–∞–Ω–∏—è, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã. "
                                       "–†–∞—Å—Ö–æ–¥—É—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –∑–∞–º–µ—Ä—ã –∏ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç –≤—Å–µ –Ω—é–∞–Ω—Å—ã –∑–¥–∞–Ω–∏—è, –≤ —Ç–æ–º —á–∏—Å–ª–µ –≤—ã—Å–æ—Ç—É, –ø–ª–æ—â–∞–¥—å, –∏ –Ω—é–∞–Ω—Å—ã –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.\n\n"
                                       "–î–∞–ª–µ–µ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –æ—Ç–±–∏–≤–∫–∞ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è. –° –ø–æ–º–æ—â—å—é –ª–∞–∑–µ—Ä–Ω–æ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç–µ–Ω–∞—Ö –∑–¥–∞–Ω–∏—è –æ—Ç–º–µ—á–∞—é—Ç—Å—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –ª–∏–Ω–∏–∏, "
                                       "–∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–∞–Ω—É—Ç —Å–ª—É–∂–∏—Ç—å –æ—Ä–∏–µ–Ω—Ç–∏—Ä–∞–º–∏ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ñ–∏–ª–µ–π –Ω–∞—Ç—è–∂–Ω–æ–≥–æ –ø–æ—Ç–æ–ª–∫–∞."
                                       "–≠—Ç–æ –∑–Ω–∞—á–∏–º—ã–π —ç—Ç–∞–ø, —Ç–∞–∫ –∫–∞–∫ –æ—Ç –≤–µ—Ä–Ω–æ—Å—Ç–∏ –æ—Ç–±–∏–≤–∫–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏—Ç–æ–≥–æ–≤–æ–µ —É—Ä–æ–≤–µ–Ω—å –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ—Ç–æ—Ä—ã–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Ç–æ–ª–∫–∞...\n\n"
                                       "<b>–ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ</b>\nüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëá",
                                  reply_markup=stocks_menu.as_markup())


@dp.callback_query(F.data == "reviews")
async def reviews_command(callback: types.CallbackQuery):
    link = hlink('–°—Å—ã–ª–∫–∞', 'https://yandex.ru/profile/134835560725/')
    await callback.answer(text="")
    await callback.message.answer(text=f"–ù–∞—à–∏ –æ—Ç–∑—ã–≤—ã –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç–∞—Ö –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µüëáüëáüëá\n\n{link}", reply_markup=back_keyboard.as_markup(), parse_mode='HTML')


@dp.callback_query(F.data == "back")
async def back_command(callback: types.CallbackQuery):
    await callback.answer(text="")
    await callback.message.answer(text="–û —á–µ–º –µ—â–µ –í—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å?\n–ù–∞–º –µ—â–µ –µ—Å—Ç—å —á–µ–º –í–∞—Å —É–¥–∏–≤–∏—Ç—å :)", reply_markup=menu.as_markup())


async def auto_message_command():
    photo_file = FSInputFile("photo_2023-12-10_18-31-43.jpg")
    await bot.send_photo(chat_id=ID, photo=photo_file, caption="–ü—Ä–∏–≤–µ—Ç! –î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å –Ω–∞–º–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –Ω–∞—à–∏–º –±–æ—Ç–æ–º", reply_markup=bot_kb.as_markup())


async def scheduler():
    aioschedule.every(2).weeks.do(asyncio.run, auto_message_command())
    while True:
        await aioschedule.run_pending()
        await asyncio.sleep(1)


async def main():
    loop = asyncio.get_event_loop()
    loop.create_task(scheduler())
    await sqlite_db.sql_start()
    bot = Bot(TOKEN, parse_mode=ParseMode.HTML)
    await dp.start_polling(bot)


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    asyncio.run(main())
